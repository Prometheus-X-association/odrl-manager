{"version":3,"sources":["../src/index.ts","../src/ContextFetcher.ts","../src/ModelEssential.ts","../src/Explorable.ts","../src/models/odrl/Asset.ts","../src/models/odrl/Rule.ts","../src/models/odrl/RulePermission.ts","../src/models/odrl/RuleProhibition.ts","../src/models/odrl/Action.ts","../src/models/odrl/Operator.ts","../src/models/odrl/RightOperand.ts","../src/models/odrl/LeftOperand.ts","../src/models/odrl/Constraint.ts","../src/models/odrl/AtomicConstraint.ts","../src/models/odrl/LogicalConstraint.ts","../src/models/odrl/Policy.ts","../src/models/odrl/PolicyAgreement.ts","../src/models/odrl/PolicyOffer.ts","../src/models/odrl/PolicySet.ts","../src/models/odrl/RuleDuty.ts","../src/utils.ts","../src/PolicyInstanciator.ts","../src/PolicyEvaluator.ts"],"sourcesContent":["import { ContextFetcher, Custom } from 'ContextFetcher';\r\nimport policyEvaluator, { PolicyEvaluator } from './PolicyEvaluator';\r\nimport policyInstanciator, { PolicyInstanciator } from './PolicyInstanciator';\r\nimport { ActionType } from 'models/odrl/Action';\r\n\r\nexport const evaluator: PolicyEvaluator = policyEvaluator;\r\nexport const instanciator: PolicyInstanciator = policyInstanciator;\r\nexport {\r\n  ActionType,\r\n  ContextFetcher,\r\n  Custom,\r\n  PolicyEvaluator,\r\n  PolicyInstanciator,\r\n};\r\n","export const Custom = (): MethodDecorator => {\r\n  return (\r\n    target: any,\r\n    key: string | symbol,\r\n    descriptor: PropertyDescriptor,\r\n  ) => {\r\n    if (descriptor && typeof descriptor.value === 'function') {\r\n      target.customMethods = target.customMethods || [];\r\n      target.customMethods.push(key);\r\n    }\r\n  };\r\n};\r\n\r\ninterface LeftOperandFunctions {\r\n  absolutePosition: () => Promise<number>;\r\n  absoluteSize: () => Promise<number>;\r\n  absoluteSpatialPosition: () => Promise<[number, number]>;\r\n  absoluteTemporalPosition: () => Promise<Date>;\r\n  count: () => Promise<number>;\r\n  dateTime: () => Promise<Date>;\r\n  delayPeriod: () => Promise<number>;\r\n  deliveryChannel: () => Promise<string>;\r\n  device: () => Promise<string>;\r\n  elapsedTime: () => Promise<number>;\r\n  event: () => Promise<string>;\r\n  fileFormat: () => Promise<string>;\r\n  industry: () => Promise<string>;\r\n  language: () => Promise<string>;\r\n  media: () => Promise<string>;\r\n  meteredTime: () => Promise<number>;\r\n  payAmount: () => Promise<number>;\r\n  percentage: () => Promise<number>;\r\n  product: () => Promise<string>;\r\n  purpose: () => Promise<string>;\r\n  recipient: () => Promise<string>;\r\n  relativePosition: () => Promise<number>;\r\n  relativeSize: () => Promise<number>;\r\n  relativeSpatialPosition: () => Promise<[number, number]>;\r\n  relativeTemporalPosition: () => Promise<Date>;\r\n  resolution: () => Promise<number>;\r\n  spatial: () => Promise<string>;\r\n  spatialCoordinates: () => Promise<[number, number]>;\r\n  system: () => Promise<string>;\r\n  systemDevice: () => Promise<string>;\r\n  timeInterval: () => Promise<[Date, Date]>;\r\n  unitOfCount: () => Promise<string>;\r\n  version: () => Promise<string>;\r\n  virtualLocation: () => Promise<string>;\r\n  [key: string]: Function;\r\n}\r\n\r\nexport abstract class ContextFetcher {\r\n  public context: LeftOperandFunctions = {\r\n    absolutePosition: this.getAbsolutePosition.bind(this),\r\n    absoluteSize: this.getAbsoluteSize.bind(this),\r\n    absoluteSpatialPosition: this.getAbsoluteSpatialPosition.bind(this),\r\n    absoluteTemporalPosition: this.getAbsoluteTemporalPosition.bind(this),\r\n    count: this.getCount.bind(this),\r\n    dateTime: this.getDateTime.bind(this),\r\n    delayPeriod: this.getDelayPeriod.bind(this),\r\n    deliveryChannel: this.getDeliveryChannel.bind(this),\r\n    device: this.getDevice.bind(this),\r\n    elapsedTime: this.getElapsedTime.bind(this),\r\n    event: this.getEvent.bind(this),\r\n    fileFormat: this.getFileFormat.bind(this),\r\n    industry: this.getIndustry.bind(this),\r\n    language: this.getLanguage.bind(this),\r\n    media: this.getMedia.bind(this),\r\n    meteredTime: this.getMeteredTime.bind(this),\r\n    payAmount: this.getPayAmount.bind(this),\r\n    percentage: this.getPercentage.bind(this),\r\n    product: this.getProduct.bind(this),\r\n    purpose: this.getPurpose.bind(this),\r\n    recipient: this.getRecipient.bind(this),\r\n    relativePosition: this.getRelativePosition.bind(this),\r\n    relativeSize: this.getRelativeSize.bind(this),\r\n    relativeSpatialPosition: this.getRelativeSpatialPosition.bind(this),\r\n    relativeTemporalPosition: this.getRelativeTemporalPosition.bind(this),\r\n    resolution: this.getResolution.bind(this),\r\n    spatial: this.getSpatial.bind(this),\r\n    spatialCoordinates: this.getSpatialCoordinates.bind(this),\r\n    system: this.getSystem.bind(this),\r\n    systemDevice: this.getSystemDevice.bind(this),\r\n    timeInterval: this.getTimeInterval.bind(this),\r\n    unitOfCount: this.getUnitOfCount.bind(this),\r\n    version: this.getVersion.bind(this),\r\n    virtualLocation: this.getVirtualLocation.bind(this),\r\n  };\r\n\r\n  constructor() {\r\n    const prototype = Object.getPrototypeOf(this);\r\n    const customs = prototype.customMethods || [];\r\n    //\r\n    customs.forEach((method: any) => {\r\n      const propertyName = method.replace(/^get/, '');\r\n      const lowercasePropertyName =\r\n        propertyName.charAt(0).toLowerCase() + propertyName.slice(1);\r\n      this.context[lowercasePropertyName as keyof ContextFetcher] =\r\n        this[method as keyof ContextFetcher].bind(this);\r\n    });\r\n  }\r\n\r\n  protected async getAbsolutePosition(): Promise<number> {\r\n    return 0;\r\n  }\r\n\r\n  protected async getAbsoluteSize(): Promise<number> {\r\n    return 0;\r\n  }\r\n\r\n  protected async getAbsoluteSpatialPosition(): Promise<[number, number]> {\r\n    return [0, 0];\r\n  }\r\n\r\n  protected async getAbsoluteTemporalPosition(): Promise<Date> {\r\n    return new Date();\r\n  }\r\n\r\n  protected async getCount(): Promise<number> {\r\n    return 0;\r\n  }\r\n\r\n  protected async getDateTime(): Promise<Date> {\r\n    return new Date();\r\n  }\r\n\r\n  protected async getDelayPeriod(): Promise<number> {\r\n    return 0;\r\n  }\r\n\r\n  protected async getDeliveryChannel(): Promise<string> {\r\n    return '';\r\n  }\r\n\r\n  protected async getDevice(): Promise<string> {\r\n    return '';\r\n  }\r\n\r\n  protected async getElapsedTime(): Promise<number> {\r\n    return 0;\r\n  }\r\n\r\n  protected async getEvent(): Promise<string> {\r\n    return '';\r\n  }\r\n\r\n  protected async getFileFormat(): Promise<string> {\r\n    return '';\r\n  }\r\n\r\n  protected async getIndustry(): Promise<string> {\r\n    return '';\r\n  }\r\n\r\n  protected async getLanguage(): Promise<string> {\r\n    return 'en';\r\n  }\r\n\r\n  protected async getMedia(): Promise<string> {\r\n    return '';\r\n  }\r\n\r\n  protected async getMeteredTime(): Promise<number> {\r\n    return 0;\r\n  }\r\n\r\n  protected async getPayAmount(): Promise<number> {\r\n    return 0;\r\n  }\r\n\r\n  protected async getPercentage(): Promise<number> {\r\n    return 0;\r\n  }\r\n\r\n  protected async getProduct(): Promise<string> {\r\n    return '';\r\n  }\r\n\r\n  protected async getPurpose(): Promise<string> {\r\n    return '';\r\n  }\r\n\r\n  protected async getRecipient(): Promise<string> {\r\n    return '';\r\n  }\r\n\r\n  protected async getRelativePosition(): Promise<number> {\r\n    return 0;\r\n  }\r\n\r\n  protected async getRelativeSize(): Promise<number> {\r\n    return 0;\r\n  }\r\n\r\n  protected async getRelativeSpatialPosition(): Promise<[number, number]> {\r\n    return [0, 0];\r\n  }\r\n\r\n  protected async getRelativeTemporalPosition(): Promise<Date> {\r\n    return new Date();\r\n  }\r\n\r\n  protected async getResolution(): Promise<number> {\r\n    return 0;\r\n  }\r\n\r\n  protected async getSpatial(): Promise<string> {\r\n    return '';\r\n  }\r\n\r\n  protected async getSpatialCoordinates(): Promise<[number, number]> {\r\n    return [0, 0];\r\n  }\r\n\r\n  protected async getSystem(): Promise<string> {\r\n    return '';\r\n  }\r\n\r\n  protected async getSystemDevice(): Promise<string> {\r\n    return '';\r\n  }\r\n\r\n  protected async getTimeInterval(): Promise<[Date, Date]> {\r\n    const now = new Date();\r\n    return [now, now];\r\n  }\r\n\r\n  protected async getUnitOfCount(): Promise<string> {\r\n    return '';\r\n  }\r\n\r\n  protected async getVersion(): Promise<string> {\r\n    return '';\r\n  }\r\n\r\n  protected async getVirtualLocation(): Promise<string> {\r\n    return '';\r\n  }\r\n}\r\n","import { ContextFetcher } from 'ContextFetcher';\r\nimport { randomUUID } from 'node:crypto';\r\ninterface ParentRelations {\r\n  [key: string]: ModelEssential;\r\n}\r\nexport abstract class ModelEssential {\r\n  private static parentRelations: ParentRelations = {};\r\n  protected static fetcher: ContextFetcher;\r\n  public _objectUID: string;\r\n  constructor() {\r\n    this._objectUID = randomUUID();\r\n  }\r\n\r\n  public static setFetcher(fetcher: ContextFetcher): void {\r\n    ModelEssential.fetcher = fetcher;\r\n  }\r\n\r\n  public setParent(parent: ModelEssential): void {\r\n    ModelEssential.parentRelations[this._objectUID] = parent;\r\n  }\r\n\r\n  public getParent(): ModelEssential {\r\n    return ModelEssential.parentRelations[this._objectUID];\r\n  }\r\n\r\n  protected abstract verify(): Promise<boolean>;\r\n  //\r\n  protected validate(depth: number = 0, promises: Promise<boolean>[]): void {\r\n    promises.push(\r\n      (async (): Promise<boolean> => {\r\n        try {\r\n          promises.push(this.verify());\r\n          for (const prop in this) {\r\n            if (this.hasOwnProperty(prop)) {\r\n              const value = (this as any)[prop];\r\n              if (Array.isArray(value)) {\r\n                for (const item of value) {\r\n                  if (\r\n                    item instanceof ModelEssential &&\r\n                    typeof item.validate === 'function'\r\n                  ) {\r\n                    item.validate(depth + 2, promises);\r\n                  } else {\r\n                    throw new Error(\r\n                      `Invalid entry: ${JSON.stringify(item, null, 2)}`,\r\n                    );\r\n                  }\r\n                }\r\n              } else if (\r\n                value instanceof ModelEssential &&\r\n                typeof value.validate === 'function'\r\n              ) {\r\n                value.validate(depth + 1, promises);\r\n              } else {\r\n                if (typeof value === 'object' && value !== null) {\r\n                  throw new Error(\r\n                    `Invalid entry: ${JSON.stringify(value, null, 2)}`,\r\n                  );\r\n                }\r\n              }\r\n            }\r\n          }\r\n          return true;\r\n        } catch (error: any) {\r\n          console.error(`[PolicyValidator] - \\x1b[31m${error.message}\\x1b[37m`);\r\n          return false;\r\n        }\r\n      })(),\r\n    );\r\n  }\r\n  //\r\n  public debug(depth: number = 0): void {\r\n    const indentation = '  '.repeat(depth);\r\n    console.log(\r\n      `\\x1b[93m${indentation}Class ${this.constructor.name}:\\x1b[37m`,\r\n    );\r\n\r\n    for (const prop in this) {\r\n      if (this.hasOwnProperty(prop)) {\r\n        const value = (this as any)[prop];\r\n\r\n        if (Array.isArray(value)) {\r\n          console.log(`${indentation}  ${prop}: \\x1b[36m[\\x1b[37m`);\r\n          for (const item of value) {\r\n            if (\r\n              item instanceof ModelEssential &&\r\n              typeof item.debug === 'function'\r\n            ) {\r\n              item.debug(depth + 2);\r\n            } else {\r\n              console.log(\r\n                `\\x1b[31m${indentation}    ${JSON.stringify(item)}\\x1b[37m`,\r\n              );\r\n            }\r\n          }\r\n          console.log(`${indentation}  \\x1b[36m]\\x1b[37m`);\r\n        } else if (\r\n          value instanceof ModelEssential &&\r\n          typeof value.debug === 'function'\r\n        ) {\r\n          value.debug(depth + 1);\r\n        } else {\r\n          if (typeof value === 'object' && value !== null) {\r\n            console.log(\r\n              `\\x1b[31m${indentation}  -${prop}: ${JSON.stringify(\r\n                value,\r\n              )}\\x1b[37m`,\r\n            );\r\n          } else {\r\n            if (prop !== '_objectUID') {\r\n              console.log(\r\n                `${indentation}  \\x1b[32m-\\x1b[37m${prop}: \\x1b[90m${value}\\x1b[37m`,\r\n              );\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { ModelEssential } from './ModelEssential';\r\n\r\nexport abstract class Explorable extends ModelEssential {\r\n  protected abstract visit(): Promise<boolean>;\r\n\r\n  protected explore(\r\n    pick: Function,\r\n    depth: number = 0,\r\n    entities: Explorable[],\r\n    options?: any,\r\n  ): void {\r\n    if (pick(this, options)) {\r\n      entities.push(this);\r\n    }\r\n    for (const prop in this) {\r\n      if (this.hasOwnProperty(prop)) {\r\n        const value = (this as any)[prop];\r\n        if (Array.isArray(value)) {\r\n          for (const item of value) {\r\n            if (\r\n              item instanceof Explorable &&\r\n              typeof item.explore === 'function'\r\n            ) {\r\n              item.explore(pick, depth + 2, entities, options);\r\n            }\r\n          }\r\n        } else if (\r\n          value instanceof Explorable &&\r\n          typeof value.explore === 'function'\r\n        ) {\r\n          value.explore(pick, depth + 1, entities, options);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Explorable } from 'Explorable';\r\nimport { AssetCollection } from './AssetCollection';\r\n\r\nexport class Asset extends Explorable {\r\n  uid?: string;\r\n  partOf?: AssetCollection[];\r\n  hasPolicy?: string;\r\n\r\n  constructor(\r\n    target:\r\n      | string\r\n      | { uid?: string; partOf?: AssetCollection[]; hasPolicy?: string },\r\n  ) {\r\n    super();\r\n    if (typeof target === 'string') {\r\n      this.uid = target;\r\n    } else {\r\n      this.uid = target.uid;\r\n      this.partOf = target.partOf;\r\n      this.hasPolicy = target.hasPolicy;\r\n    }\r\n  }\r\n  protected async visit(): Promise<boolean> {\r\n    return true;\r\n  }\r\n  public async verify(): Promise<boolean> {\r\n    return true;\r\n  }\r\n}\r\n","import { Explorable } from '../../Explorable';\r\nimport { Action } from './Action';\r\nimport { Asset } from './Asset';\r\nimport { Constraint } from './Constraint';\r\nimport { Party } from './Party';\r\nimport { Relation } from './Relation';\r\n\r\nexport abstract class Rule extends Explorable {\r\n  action?: Action | Action[];\r\n  target?: Asset;\r\n  assigner?: Party;\r\n  assignee?: Party;\r\n  asset?: Asset;\r\n  parties?: Party[];\r\n  failures?: Rule[];\r\n  protected constraint?: Constraint[];\r\n  uid?: string;\r\n  relation?: Relation;\r\n\r\n  constructor(uid?: string) {\r\n    super();\r\n    if (uid) {\r\n      this.uid = uid;\r\n    }\r\n  }\r\n\r\n  protected get constraints(): Constraint[] {\r\n    if (this.constraint === undefined) {\r\n      this.constraint = [];\r\n    }\r\n    return this.constraint;\r\n  }\r\n\r\n  public setTarget(asset: Asset): void {\r\n    this.target = asset;\r\n  }\r\n\r\n  public setAction(action: Action): void {\r\n    this.action = action;\r\n  }\r\n\r\n  public addAction(action: Action): void {\r\n    if (this.action === undefined) {\r\n      this.action = [];\r\n    }\r\n    (this.action as Array<Action>).push(action);\r\n  }\r\n\r\n  public addConstraint(constraint: Constraint) {\r\n    this.constraints.push(constraint);\r\n  }\r\n\r\n  public getTarget(): Asset | undefined {\r\n    return this.target;\r\n  }\r\n\r\n  public getAction(): Action | undefined | Action[] {\r\n    return this.action;\r\n  }\r\n\r\n  public getConstraints(): Constraint[] {\r\n    return this.constraints;\r\n  }\r\n}\r\n","import { Rule } from './Rule';\r\nimport { RuleDuty } from './RuleDuty';\r\n\r\nexport class RulePermission extends Rule {\r\n  duty?: RuleDuty[];\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  public addDuty(duty: RuleDuty) {\r\n    if (this.duty === undefined) {\r\n      this.duty = [];\r\n    }\r\n    this.duty.push(duty);\r\n  }\r\n\r\n  public async visit(): Promise<boolean> {\r\n    try {\r\n      if (this.constraints) {\r\n        const all = await Promise.all(\r\n          this.constraints.map((constraint) => constraint.visit()),\r\n        );\r\n        return all.every(Boolean);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error while evaluating rule:', error);\r\n    }\r\n    return false;\r\n  }\r\n\r\n  public async verify(): Promise<boolean> {\r\n    return true;\r\n  }\r\n}\r\n","import { Rule } from './Rule';\r\nimport { RuleDuty } from './RuleDuty';\r\n\r\nexport class RuleProhibition extends Rule {\r\n  remedy?: RuleDuty[];\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  public async visit(): Promise<boolean> {\r\n    try {\r\n      if (this.constraints) {\r\n        const all = await Promise.all(\r\n          this.constraints.map((constraint) => constraint.visit()),\r\n        );\r\n        if (all.length) {\r\n          return all.every((value) => value === false);\r\n        }\r\n        return false;\r\n      }\r\n    } catch (error) {\r\n      console.error('Error while evaluating rule:', error);\r\n    }\r\n    return false;\r\n  }\r\n\r\n  public async verify(): Promise<boolean> {\r\n    return true;\r\n  }\r\n}\r\n","import { ModelEssential } from '../../ModelEssential';\r\nimport { Constraint } from './Constraint';\r\n\r\nconst actions = [\r\n  'Attribution',\r\n  'CommericalUse',\r\n  'DerivativeWorks',\r\n  'Distribution',\r\n  'Notice',\r\n  'Reproduction',\r\n  'ShareAlike',\r\n  'Sharing',\r\n  'SourceCode',\r\n  'acceptTracking',\r\n  'adHocShare',\r\n  'aggregate',\r\n  'annotate',\r\n  'anonymize',\r\n  'append',\r\n  'appendTo',\r\n  'archive',\r\n  'attachPolicy',\r\n  'attachSource',\r\n  'attribute',\r\n  'commercialize',\r\n  'compensate',\r\n  'concurrentUse',\r\n  'copy',\r\n  'delete',\r\n  'derive',\r\n  'digitize',\r\n  'display',\r\n  'distribute',\r\n  'ensureExclusivity',\r\n  'execute',\r\n  'export',\r\n  'extract',\r\n  'extractChar',\r\n  'extractPage',\r\n  'extractWord',\r\n  'give',\r\n  'grantUse',\r\n  'include',\r\n  'index',\r\n  'inform',\r\n  'install',\r\n  'lease',\r\n  'lend',\r\n  'license',\r\n  'modify',\r\n  'move',\r\n  'nextPolicy',\r\n  'obtainConsent',\r\n  'pay',\r\n  'play',\r\n  'present',\r\n  'preview',\r\n  'print',\r\n  'read',\r\n  'reproduce',\r\n  'reviewPolicy',\r\n  'secondaryUse',\r\n  'sell',\r\n  'share',\r\n  'shareAlike',\r\n  'stream',\r\n  'synchronize',\r\n  'textToSpeech',\r\n  'transfer',\r\n  'transform',\r\n  'translate',\r\n  'uninstall',\r\n  'use',\r\n  'watermark',\r\n  'write',\r\n  'writeTo',\r\n] as const;\r\n\r\nexport type ActionType = (typeof actions)[number];\r\n\r\nexport class Action extends ModelEssential {\r\n  value: string;\r\n  refinement?: Constraint[];\r\n  includedIn: Action | null;\r\n  implies?: Action[];\r\n\r\n  constructor(value: string, includedIn: Action | null) {\r\n    super();\r\n    this.value = value;\r\n    this.includedIn = includedIn;\r\n  }\r\n\r\n  public addConstraint(constraint: Constraint) {\r\n    if (this.refinement === undefined) {\r\n      this.refinement = [];\r\n    }\r\n    this.refinement.push(constraint);\r\n  }\r\n  public async verify(): Promise<boolean> {\r\n    return true;\r\n  }\r\n}\r\n","import { ModelEssential } from '../../ModelEssential';\r\n\r\nexport class Operator extends ModelEssential {\r\n  public static readonly EQ: string = 'eq';\r\n  public static readonly NEQ: string = 'neq';\r\n  public static readonly GT: string = 'gt';\r\n  public static readonly GEQ: string = 'gteq';\r\n  public static readonly LT: string = 'lt';\r\n  public static readonly LEQ: string = 'lteq';\r\n  public static readonly IN: string = 'isPartOf';\r\n  public static readonly HAS_PART: string = 'hasPart';\r\n  public static readonly IS_A: string = 'isA';\r\n  public static readonly IS_ALL_OF: string = 'isAllOf';\r\n  public static readonly IS_ANY_OF: string = 'isAnyOf';\r\n  public static readonly IS_NONE_OF: string = 'isNoneOf';\r\n\r\n  public value: string;\r\n  constructor(value: string) {\r\n    super();\r\n    this.value = value;\r\n  }\r\n\r\n  public async verify(): Promise<boolean> {\r\n    const isValid = Object.values(Operator).includes(this.value);\r\n    if (!isValid) {\r\n      throw new Error(`Operator not valid: '${this.value}'`);\r\n    }\r\n    return isValid;\r\n  }\r\n}\r\n","import { ModelEssential } from '../../ModelEssential';\r\n\r\nexport class RightOperand extends ModelEssential {\r\n  public value: string | number;\r\n\r\n  constructor(value: string | number) {\r\n    super();\r\n    this.value = value;\r\n  }\r\n\r\n  public async verify(): Promise<boolean> {\r\n    //\r\n    return true;\r\n  }\r\n}\r\n","import { ModelEssential } from '../../ModelEssential';\r\n\r\nexport class LeftOperand extends ModelEssential {\r\n  private value: string;\r\n\r\n  constructor(value: string) {\r\n    super();\r\n    this.value = value;\r\n  }\r\n\r\n  public getValue(): string {\r\n    return this.value;\r\n  }\r\n\r\n  public async visit(): Promise<string | number | null> {\r\n    try {\r\n      if (ModelEssential.fetcher) {\r\n        return ModelEssential.fetcher.context[this.value]();\r\n      }\r\n    } catch (error: any) {\r\n      console.error(`LeftOperand function ${this.value} not found`);\r\n    }\r\n    return null;\r\n  }\r\n\r\n  public async verify(): Promise<boolean> {\r\n    return true;\r\n  }\r\n}\r\n","import { ModelEssential } from '../../ModelEssential';\r\nimport { LeftOperand } from './LeftOperand';\r\nimport { LogicalConstraint } from './LogicalConstraint';\r\nimport { Operator } from './Operator';\r\nimport { RightOperand } from './RightOperand';\r\n\r\nexport abstract class Constraint extends ModelEssential {\r\n  public uid?: string;\r\n  public dataType?: string;\r\n  public unit?: string;\r\n  public status?: number;\r\n  public operator: Operator | null;\r\n  public leftOperand: LeftOperand | null;\r\n  public rightOperand: RightOperand | null;\r\n  private rightOperandReference?: null | string | string[];\r\n  private logicalConstraints?: null | LogicalConstraint[];\r\n  constructor(\r\n    leftOperand: LeftOperand | null,\r\n    operator: Operator | null,\r\n    rightOperand: RightOperand | null,\r\n  ) {\r\n    super();\r\n    this.leftOperand = leftOperand;\r\n    this.operator = operator;\r\n    this.rightOperand = rightOperand;\r\n  }\r\n\r\n  async visit(): Promise<boolean> {\r\n    return false;\r\n  }\r\n\r\n  protected async verify(): Promise<boolean> {\r\n    try {\r\n      const isValid =\r\n        (this.uid === undefined || typeof this.uid === 'string') &&\r\n        (this.dataType === undefined || typeof this.dataType === 'string') &&\r\n        (this.unit === undefined || typeof this.unit === 'string') &&\r\n        (this.status === undefined || typeof this.status === 'number');\r\n      if (!isValid) {\r\n        throw new Error('Some of your constraint properties are invalid');\r\n      }\r\n      return isValid;\r\n    } catch (error: any) {\r\n      throw error.message;\r\n    }\r\n  }\r\n}\r\n","import { Operator } from './Operator';\r\nimport { RightOperand } from './RightOperand';\r\nimport { LeftOperand } from './LeftOperand';\r\nimport { Constraint } from './Constraint';\r\n\r\nexport class AtomicConstraint extends Constraint {\r\n  constructor(\r\n    leftOperand: LeftOperand,\r\n    operator: Operator,\r\n    rightOperand: RightOperand,\r\n  ) {\r\n    super(leftOperand, operator, rightOperand);\r\n  }\r\n\r\n  async visit(): Promise<boolean> {\r\n    if (this.leftOperand && this.rightOperand) {\r\n      const leftValue: unknown = await this.leftOperand.visit();\r\n      switch (this.operator?.value) {\r\n        case Operator.EQ:\r\n          return leftValue === this.rightOperand.value;\r\n        case Operator.NEQ:\r\n          return leftValue !== this.rightOperand.value;\r\n        case Operator.GT:\r\n          return (leftValue as number) > (this.rightOperand.value as number);\r\n        case Operator.GEQ:\r\n          return (leftValue as number) >= (this.rightOperand.value as number);\r\n        case Operator.LT:\r\n          return (leftValue as number) < (this.rightOperand.value as number);\r\n        case Operator.LEQ:\r\n          return (leftValue as number) <= (this.rightOperand.value as number);\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  public async verify(): Promise<boolean> {\r\n    const isValid =\r\n      (await super.verify()) &&\r\n      this.leftOperand instanceof LeftOperand &&\r\n      this.operator instanceof Operator &&\r\n      this.rightOperand instanceof RightOperand;\r\n    if (!isValid) {\r\n      throw new Error('AtomicConstraint propertie invalid');\r\n    }\r\n    return isValid;\r\n  }\r\n}\r\n","import { Constraint } from './Constraint';\r\nimport { Operator } from './Operator';\r\n\r\nexport class LogicalConstraint extends Constraint {\r\n  static readonly operands: string[] = ['and', 'andSequence', 'or', 'xone'];\r\n  private constraint: Constraint[];\r\n  private operand?: string;\r\n  constructor(operand: string) {\r\n    super(null, null, null);\r\n    this.operand = operand;\r\n    this.constraint = [];\r\n  }\r\n  public addConstraint(constraint: Constraint) {\r\n    this.constraint.push(constraint);\r\n  }\r\n  // Todo\r\n  async visit(): Promise<boolean> {\r\n    switch (this.operand) {\r\n      case 'and':\r\n        return (\r\n          await Promise.all(\r\n            this.constraint.map((constraint) => constraint.visit()),\r\n          )\r\n        ).every((result) => result);\r\n      case 'or':\r\n        return (\r\n          await Promise.all(\r\n            this.constraint.map((constraint) => constraint.visit()),\r\n          )\r\n        ).some((result) => result);\r\n      default:\r\n        return false;\r\n    }\r\n  }\r\n\r\n  public async verify(): Promise<boolean> {\r\n    const isValid =\r\n      (await super.verify()) &&\r\n      this.operand &&\r\n      LogicalConstraint.operands.includes(this.operand);\r\n    if (!isValid) {\r\n      throw new Error(`LogicalConstraint propertie invalid '${this.operand}'`);\r\n    }\r\n    return isValid;\r\n  }\r\n}\r\n","import { Explorable } from '../../Explorable';\r\nimport { ConflictTerm } from './ConflictTerm';\r\nimport { RuleDuty } from './RuleDuty';\r\nimport { RulePermission } from './RulePermission';\r\nimport { RuleProhibition } from './RuleProhibition';\r\n\r\nexport abstract class Policy extends Explorable {\r\n  protected '@context': string = '';\r\n  protected '@type': string;\r\n  protected uid: string;\r\n  protected permission: RulePermission[];\r\n  protected prohibition: RuleProhibition[];\r\n  protected obligation: RuleDuty[];\r\n  protected profile?: string[];\r\n  protected inheritFrom?: string[];\r\n  protected conflict?: ConflictTerm[];\r\n\r\n  constructor(uid: string, context: string, type: string) {\r\n    super();\r\n    this['@type'] = type;\r\n    this['@context'] = context;\r\n    this.uid = uid;\r\n    this.permission = [];\r\n    this.prohibition = [];\r\n    this.obligation = [];\r\n  }\r\n\r\n  public get permissions(): RulePermission[] {\r\n    return this.permission;\r\n  }\r\n  public get prohibitions(): RuleProhibition[] {\r\n    return this.prohibition;\r\n  }\r\n  public get obligations(): RulePermission[] {\r\n    return this.permission;\r\n  }\r\n  public addPermission(permission: RulePermission): void {\r\n    this.permission.push(permission);\r\n  }\r\n  public addProhibition(prohibition: RuleProhibition): void {\r\n    this.prohibition.push(prohibition);\r\n  }\r\n  public addDuty(prohibition: RuleDuty): void {\r\n    this.obligation.push(prohibition);\r\n  }\r\n  public async validate(): Promise<boolean> {\r\n    const promises: Promise<boolean>[] = [];\r\n    super.validate(0, promises);\r\n    return Promise.all(promises).then((results) =>\r\n      results.every((result) => result),\r\n    );\r\n  }\r\n\r\n  public async explore(picker: Function, options?: any): Promise<Explorable[]> {\r\n    const explorables: Explorable[] = [];\r\n    super.explore(picker, 0, explorables, options);\r\n    return explorables;\r\n  }\r\n}\r\n","import { Party } from './Party';\r\nimport { RulePermission } from './RulePermission';\r\nimport { Policy } from './Policy';\r\n\r\nexport class PolicyAgreement extends Policy {\r\n  '@type': 'Agreement' = 'Agreement';\r\n  permission: RulePermission[] = [];\r\n  assigner: Party | null = null;\r\n  assignee: Party | null = null;\r\n\r\n  constructor(uid: string, context: string) {\r\n    super(uid, context, 'Agreement');\r\n  }\r\n\r\n  public async visit(): Promise<boolean> {\r\n    return false;\r\n  }\r\n\r\n  public async verify(): Promise<boolean> {\r\n    return true;\r\n  }\r\n}\r\n","import { Party } from './Party';\r\nimport { RulePermission } from './RulePermission';\r\nimport { Policy } from './Policy';\r\n\r\nexport class PolicyOffer extends Policy {\r\n  '@type': 'Offer' = 'Offer';\r\n  permission: RulePermission[] = [];\r\n  assigner: Party | null = null;\r\n  assignee: Party | null = null;\r\n\r\n  constructor(uid: string, context: string) {\r\n    super(uid, context, 'Offer');\r\n  }\r\n\r\n  public async visit(): Promise<boolean> {\r\n    return false;\r\n  }\r\n\r\n  public async verify(): Promise<boolean> {\r\n    return true;\r\n  }\r\n}\r\n","import { RulePermission } from './RulePermission';\r\nimport { Policy } from './Policy';\r\n\r\nexport class PolicySet extends Policy {\r\n  '@type': 'Set' = 'Set';\r\n  permission: RulePermission[] = [];\r\n\r\n  constructor(uid: string, context: string) {\r\n    super(uid, context, 'Set');\r\n  }\r\n\r\n  public async visit(): Promise<boolean> {\r\n    return false;\r\n  }\r\n\r\n  public async verify(): Promise<boolean> {\r\n    return true;\r\n  }\r\n}\r\n","import { Party } from './Party';\r\nimport { Rule } from './Rule';\r\n\r\nexport class RuleDuty extends Rule {\r\n  private consequence?: RuleDuty[];\r\n  public compensatedParty?: string;\r\n  public compensatingParty?: string;\r\n  constructor(assigner?: Party, assignee?: Party) {\r\n    super();\r\n    if (assigner) {\r\n      this.assigner = assigner;\r\n    }\r\n    if (assignee) {\r\n      this.assignee = assignee;\r\n    }\r\n  }\r\n\r\n  public async visit(): Promise<boolean> {\r\n    return false;\r\n  }\r\n\r\n  public async verify(): Promise<boolean> {\r\n    return true;\r\n  }\r\n\r\n  public addConsequence(consequence: RuleDuty) {\r\n    if (this.consequence === undefined) {\r\n      this.consequence = [];\r\n    }\r\n    this.consequence.push(consequence);\r\n  }\r\n}\r\n","export enum CopyMode {\r\n  all = 0,\r\n  exclude = 1,\r\n  include = 2,\r\n}\r\nexport const copy = (\r\n  instance: Record<string, any> | null | undefined,\r\n  element: Record<string, any>,\r\n  attributes: string[] = [],\r\n  mode: CopyMode = 0,\r\n): void => {\r\n  if (instance) {\r\n    let keys = Object.keys(element);\r\n    if (mode !== CopyMode.all) {\r\n      keys = keys.filter((key) => {\r\n        const included = attributes.includes(key);\r\n        return mode === CopyMode.exclude ? !included : included;\r\n      });\r\n    }\r\n    keys.forEach((key: string) => {\r\n      if (typeof instance[key] !== 'function') {\r\n        instance[key] = element[key];\r\n      }\r\n    });\r\n  }\r\n};\r\n\r\nexport const getLastTerm = (input: string): string | undefined => {\r\n  const a = input.split('/');\r\n  const b = a.pop();\r\n  return b === '' ? a.pop() : b;\r\n};\r\n","import { Action } from './models/odrl/Action';\r\nimport { Asset } from './models/odrl/Asset';\r\nimport { AtomicConstraint } from './models/odrl/AtomicConstraint';\r\nimport { Constraint } from './models/odrl/Constraint';\r\nimport { LeftOperand } from './models/odrl/LeftOperand';\r\nimport { LogicalConstraint } from './models/odrl/LogicalConstraint';\r\nimport { Operator } from './models/odrl/Operator';\r\nimport { Policy } from './models/odrl/Policy';\r\nimport { PolicyAgreement } from './models/odrl/PolicyAgreement';\r\nimport { PolicyOffer } from './models/odrl/PolicyOffer';\r\nimport { PolicySet } from './models/odrl/PolicySet';\r\nimport { RightOperand } from './models/odrl/RightOperand';\r\nimport { Rule } from './models/odrl/Rule';\r\nimport { RuleDuty } from './models/odrl/RuleDuty';\r\nimport { RulePermission } from './models/odrl/RulePermission';\r\nimport { RuleProhibition } from './models/odrl/RuleProhibition';\r\nimport { CopyMode, copy, getLastTerm } from './utils';\r\n\r\ntype InstanciatorFunction = (node: any, parent: any) => any;\r\n\r\nexport class PolicyInstanciator {\r\n  public policy: Policy | null;\r\n  public static instance: PolicyInstanciator;\r\n\r\n  constructor() {\r\n    this.policy = null;\r\n  }\r\n\r\n  public static getInstance(): PolicyInstanciator {\r\n    if (!PolicyInstanciator.instance) {\r\n      PolicyInstanciator.instance = new PolicyInstanciator();\r\n    }\r\n    return PolicyInstanciator.instance;\r\n  }\r\n\r\n  private static readonly instanciators: Record<string, InstanciatorFunction> =\r\n    {\r\n      permission: PolicyInstanciator.setPermission,\r\n      prohibition: PolicyInstanciator.setProhibition,\r\n      obligation: PolicyInstanciator.setObligation,\r\n      duty: PolicyInstanciator.setDuty,\r\n      action: PolicyInstanciator.setAction,\r\n      target: PolicyInstanciator.setTarget,\r\n      constraint: PolicyInstanciator.setConstraint,\r\n      refinement: PolicyInstanciator.setRefinement,\r\n      consequence: PolicyInstanciator.setConsequence,\r\n    };\r\n\r\n  private static setPermission(element: any, parent: Policy): RulePermission {\r\n    const rule = new RulePermission();\r\n    rule.setParent(parent);\r\n    parent.addPermission(rule);\r\n    return rule;\r\n  }\r\n\r\n  private static setProhibition(element: any, parent: Policy): RuleProhibition {\r\n    const rule = new RuleProhibition();\r\n    rule.setParent(parent);\r\n    parent.addProhibition(rule);\r\n    return rule;\r\n  }\r\n\r\n  private static setObligation(element: any, parent: Policy): RuleDuty {\r\n    const { assigner, assignee } = element;\r\n    const rule = new RuleDuty(assigner, assignee);\r\n    rule.setParent(parent);\r\n    parent.addDuty(rule);\r\n    return rule;\r\n  }\r\n\r\n  private static setDuty(element: any, parent: RulePermission) {\r\n    const { assigner, assignee } = element;\r\n    const rule = new RuleDuty(assigner, assignee);\r\n    rule.setParent(parent);\r\n    parent.addDuty(rule);\r\n    return rule;\r\n  }\r\n\r\n  private static setAction(element: string | any, parent: Rule): Action {\r\n    try {\r\n      const value = getLastTerm(\r\n        typeof element === 'object' ? element.value : element,\r\n      );\r\n      if (!value) {\r\n        throw new Error('Invalid action');\r\n      }\r\n      const action = new Action(value, null);\r\n      action.setParent(parent);\r\n      parent.setAction(action);\r\n      return action;\r\n    } catch (error: any) {\r\n      throw new Error('Action is undefined');\r\n    }\r\n  }\r\n\r\n  private static setTarget(element: any, parent: Rule): void {\r\n    const asset = new Asset(element);\r\n    asset.setParent(parent);\r\n    parent.setTarget(asset);\r\n  }\r\n\r\n  private static setConstraint(\r\n    element: any,\r\n    parent: LogicalConstraint | Rule | Action,\r\n  ): Constraint {\r\n    const {\r\n      leftOperand,\r\n      operator: _operator,\r\n      rightOperand,\r\n      constraint: constraints,\r\n    } = element;\r\n    const operator = _operator && getLastTerm(_operator);\r\n    const constraint: Constraint =\r\n      (leftOperand &&\r\n        operator &&\r\n        rightOperand !== undefined &&\r\n        new AtomicConstraint(\r\n          new LeftOperand(leftOperand),\r\n          new Operator(operator),\r\n          new RightOperand(rightOperand),\r\n        )) ||\r\n      (operator &&\r\n        Array.isArray(constraints) &&\r\n        constraints.length > 0 &&\r\n        new LogicalConstraint(operator));\r\n    copy(\r\n      constraint,\r\n      element,\r\n      ['constraint', 'leftOperand', 'operator', 'rightOperand'],\r\n      CopyMode.exclude,\r\n    );\r\n    if (constraint) {\r\n      constraint.setParent(parent);\r\n    }\r\n    parent.addConstraint(constraint || element);\r\n    return constraint;\r\n  }\r\n\r\n  private static setRefinement(element: any, parent: Action): Constraint {\r\n    return PolicyInstanciator.setConstraint(element, parent);\r\n  }\r\n\r\n  private static setConsequence(element: any, parent: RuleDuty): RuleDuty {\r\n    const { assigner, assignee } = element;\r\n    const rule = new RuleDuty(assigner, assignee);\r\n    copy(\r\n      rule,\r\n      element,\r\n      ['compensatedParty', 'compensatingParty'],\r\n      CopyMode.include,\r\n    );\r\n    rule.setParent(parent);\r\n    parent.addConsequence(rule);\r\n    return rule;\r\n  }\r\n\r\n  private selectPolicyType(json: any): void {\r\n    const context = json['@context'];\r\n    switch (json['@type']) {\r\n      case 'Offer':\r\n        this.policy = new PolicyOffer(json.uid, context);\r\n        break;\r\n      case 'Set':\r\n        this.policy = new PolicySet(json.uid, context);\r\n        break;\r\n      case 'Agreement':\r\n        this.policy = new PolicyAgreement(json.uid, context);\r\n        break;\r\n      default:\r\n        throw new Error(`Unknown policy type: ${json['@type']}`);\r\n    }\r\n  }\r\n\r\n  public genPolicyFrom(json: any): Policy | null {\r\n    try {\r\n      this.selectPolicyType(json);\r\n      this.traverse(json, this.policy);\r\n      return this.policy;\r\n    } catch (error: any) {\r\n      console.error(error.message);\r\n    }\r\n    return null;\r\n  }\r\n\r\n  public traverse(node: any, parent: any): void {\r\n    const instanciate = (property: string, element: any) => {\r\n      try {\r\n        if (element) {\r\n          const child: any =\r\n            PolicyInstanciator.instanciators[property] &&\r\n            PolicyInstanciator.instanciators[property](element, parent);\r\n          if (typeof element === 'object') {\r\n            if (child) {\r\n              this.traverse(element, child);\r\n            } else {\r\n              console.warn(`Traversal stopped for \"${property}\".`);\r\n            }\r\n          }\r\n        }\r\n      } catch (error: any) {\r\n        console.error(error.message);\r\n      }\r\n    };\r\n    for (const property in node) {\r\n      const element = node[property];\r\n      if (Array.isArray(element)) {\r\n        element.forEach((item: any) => {\r\n          instanciate(property, item);\r\n        });\r\n      } else {\r\n        instanciate(property, element);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default PolicyInstanciator.getInstance();\r\n","import { ContextFetcher } from 'ContextFetcher';\r\nimport { Policy } from './models/odrl/Policy';\r\nimport { Explorable } from 'Explorable';\r\nimport { Asset } from 'models/odrl/Asset';\r\nimport { RulePermission } from 'models/odrl/RulePermission';\r\nimport { RuleProhibition } from 'models/odrl/RuleProhibition';\r\nimport { ModelEssential } from 'ModelEssential';\r\nimport { Action, ActionType } from 'models/odrl/Action';\r\nimport { RuleDuty } from 'models/odrl/RuleDuty';\r\nimport { PolicyInstanciator } from 'PolicyInstanciator';\r\n\r\ninterface Picker {\r\n  pick: (explorable: Explorable, options?: any) => boolean;\r\n  type: Function;\r\n}\r\ntype Pickers = {\r\n  [key: string]: Picker;\r\n};\r\ntype ParentRule = RulePermission | RuleProhibition | RuleDuty;\r\nexport class PolicyEvaluator {\r\n  public static instance: PolicyEvaluator;\r\n  private policies: Policy[] | null;\r\n\r\n  private readonly pickers: Pickers = {\r\n    target: {\r\n      pick: this.pickTarget.bind(this),\r\n      type: Asset,\r\n    },\r\n    permission: {\r\n      pick: this.pickPermission.bind(this),\r\n      type: RulePermission,\r\n    },\r\n    prohibition: {\r\n      pick: this.pickProhibition.bind(this),\r\n      type: RuleProhibition,\r\n    },\r\n  };\r\n\r\n  constructor() {\r\n    this.policies = null;\r\n  }\r\n\r\n  public static getInstance(): PolicyEvaluator {\r\n    if (!PolicyEvaluator.instance) {\r\n      PolicyEvaluator.instance = new PolicyEvaluator();\r\n    }\r\n    return PolicyEvaluator.instance;\r\n  }\r\n\r\n  private pickTarget(explorable: Explorable, options?: any): boolean {\r\n    if (explorable instanceof Asset) {\r\n      const uid = (explorable as Asset).uid;\r\n      const target = options?.target;\r\n      if (typeof target === 'object') {\r\n        return target.all || uid === target.uid;\r\n      }\r\n      return uid === target;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  private pickPermission(explorable: Explorable, options?: any): boolean {\r\n    console.log('pickPermission');\r\n    return true;\r\n  }\r\n\r\n  private pickProhibition(explorable: Explorable, options?: any): boolean {\r\n    console.log('pickProhibition');\r\n    return true;\r\n  }\r\n\r\n  /*\r\n  public setPolicy(policy: Policy): void {\r\n    this.policy = policy;\r\n  }\r\n  */\r\n\r\n  public cleanPolicies(): void {\r\n    this.policies = [];\r\n  }\r\n\r\n  public addPolicy(policy: Policy): void {\r\n    if (this.policies === null) {\r\n      this.policies = [];\r\n    }\r\n    this.policies.push(policy);\r\n  }\r\n\r\n  public setPolicy(policy: Policy): void {\r\n    this.cleanPolicies();\r\n    this.addPolicy(policy);\r\n  }\r\n\r\n  public setFetcher(fetcher: ContextFetcher): void {\r\n    ModelEssential.setFetcher(fetcher);\r\n  }\r\n\r\n  private pick = (explorable: Explorable, options?: any): boolean => {\r\n    for (const key in options) {\r\n      if (options.hasOwnProperty(key)) {\r\n        const picker: Picker = this.pickers[key];\r\n        if (\r\n          typeof picker.pick === 'function' &&\r\n          explorable instanceof picker.type\r\n        ) {\r\n          const pickable = picker.pick(explorable, options);\r\n          if (pickable) {\r\n            return true;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  private async explore(options: any): Promise<Explorable[]> {\r\n    if (this.policies && this.policies.length) {\r\n      const explorables: Explorable[] = (\r\n        await Promise.all(\r\n          this.policies.map(\r\n            async (policy: Policy) =>\r\n              await policy.explore(this.pick.bind(this), options),\r\n          ),\r\n        )\r\n      ).flat();\r\n      return explorables;\r\n    }\r\n    return [];\r\n  }\r\n\r\n  /**\r\n   * Retrieves a list of performable actions on the specified target.\r\n   * @param target - A string representing the target\r\n   * @returns A promise resolved with an array of performables actions.\r\n   */\r\n  public async getPerformableActions(target: string): Promise<string[]> {\r\n    const targets: Asset[] = (await this.explore({\r\n      target,\r\n    })) as Asset[];\r\n    const actionPromises: Record<string, Promise<boolean>[]> = {};\r\n    targets.forEach((target: Asset) => {\r\n      const parent: ParentRule = target.getParent() as ParentRule;\r\n      const action: Action = parent.action as Action;\r\n      if (!actionPromises[action.value]) {\r\n        actionPromises[action.value] = [];\r\n      }\r\n      actionPromises[action.value].push(parent.visit());\r\n    });\r\n    const actions: string[] = [];\r\n    for (const [action, promises] of Object.entries(actionPromises)) {\r\n      const results = await Promise.all(promises);\r\n      const isPerformable = results.every((result) => result);\r\n      if (isPerformable) {\r\n        actions.push(action);\r\n      }\r\n    }\r\n    return actions;\r\n  }\r\n\r\n  /**\r\n   * Verify if a specific action can be performed on a given target.\r\n   * @param actionType - A string representing the action.\r\n   * @param target - A string representing the target.\r\n   * @returns Resolves with a boolean indicating action performability.\r\n   */\r\n  public async isActionPerformable(\r\n    actionType: ActionType,\r\n    target: string,\r\n  ): Promise<boolean> {\r\n    const targets: Asset[] = (await this.explore({\r\n      target,\r\n    })) as Asset[];\r\n    const results = await targets.reduce(\r\n      async (promise: Promise<boolean[]>, target: Asset) => {\r\n        const acc = await promise;\r\n        const parent: ParentRule = target.getParent() as ParentRule;\r\n        const action: Action = parent.action as Action;\r\n        return actionType === action?.value\r\n          ? [...acc, await parent.visit()]\r\n          : acc;\r\n      },\r\n      Promise.resolve([]),\r\n    );\r\n    return results.every((result) => result);\r\n  }\r\n\r\n  /**\r\n   * Evaluates the exploitability of listed resources within a set of policies.\r\n   * @param json - JSON representation of policies to be evaluated.\r\n   * @returns Resolves with a boolean indicating if the resources are exploitable.\r\n   */\r\n  public async evalResourcePerformabilities(json: any): Promise<boolean> {\r\n    const instanciator = new PolicyInstanciator();\r\n    instanciator.genPolicyFrom(json);\r\n    const evaluator = new PolicyEvaluator();\r\n    if (instanciator.policy) {\r\n      evaluator.setPolicy(instanciator.policy);\r\n    }\r\n    const targets: Asset[] = (await evaluator.explore({\r\n      target: { uid: '', all: true },\r\n    })) as Asset[];\r\n    const actionPromises: Promise<boolean>[] = targets.map(\r\n      async (target: Asset) => {\r\n        const parent: ParentRule = target.getParent() as ParentRule;\r\n        const actionType = (parent.action as Action).value as ActionType;\r\n        return target.uid\r\n          ? this.isActionPerformable(actionType, target.uid)\r\n          : false;\r\n      },\r\n    );\r\n    const results = await Promise.all(actionPromises);\r\n    return results.every((result) => result);\r\n  }\r\n}\r\n\r\nexport default PolicyEvaluator.getInstance();\r\n"],"mappings":"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","names":["target","instanciator","evaluator"]}